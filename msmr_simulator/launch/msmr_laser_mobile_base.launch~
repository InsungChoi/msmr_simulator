<launch>
    <param name="use_sim_time" value="true" />
    
  <group ns="robot1">   
    	<param name="tf_prefix" value="robot1_tf"/> 

	    <!-- send the erratic robot XML to param server -->
	    <param name="robot_description" command="$(find xacro)/xacro.py '$(find erratic_description)/urdf/erratic_laser_1.urdf.xacro'" />
	
	    <!-- push robot_description to factory and spawn robot in gazebo -->
	    <node name="spawn_robot1" pkg="gazebo" type="spawn_model"
	          args="-param robot_description
	                -urdf
	                -x -7.00
	                -y -7.00
	                -z 0.00
	                -model robot1"
	          respawn="false" output="screen" />
	
	    <!-- start robot state publisher -->
	    <node pkg="robot_state_publisher" type="state_publisher" name="robot_state_publisher1" output="screen" >
	        <param name="publish_frequency" type="double" value="50.0" />
	        <param name="tf_prefix" type="string" value="" />
	    </node>
	
	    <!-- Filter for base laser shadowing/veiling -->
	<!--    <node pkg="laser_filters" type="scan_to_cloud_filter_chain" respawn="true" name="base_shadow_filter1" >
	        <remap from="scan" to="base_scan/scan" />
	        <remap from="cloud_filtered" to="base_scan/shadow_filtered" />
	        <param name="target_frame" value="base_footprint" />
	        <param name="high_fidelity" value="false" />
	        <rosparam command="load" file="$(find erratic_description)/params/shadow_filter.yaml" />
	    </node> -->
	
	    <!-- Filter for base laser scans that hit the body of the robot -->
<!--	    <node pkg="robot_self_filter" type="self_filter" name="base_laser_self_filter1" respawn="true" output="screen" >
	        <remap from="cloud_in" to="base_scan/shadow_filtered" />
	        <remap from="cloud_out" to="base_scan/marking" />
	        <param name="sensor_frame" type="string" value="base_scan_link" />
	        <rosparam file="$(find erratic_description)/params/self_filter.yaml" command="load" />
	    </node> -->
    </group>  
	
<!--	<group ns="robot2">
    	<param name="tf_prefix" value="robot2_tf"/>


	    <param name="robot_description" command="$(find xacro)/xacro.py '$(find erratic_description)/urdf/erratic_laser_2.urdf.xacro'" />
	

	    <node name="spawn_robot2" pkg="gazebo" type="spawn_model"
	          args="-param robot_description
	                -urdf
	                -x 1.00
	                -y 1.00
	                -z 0.00
	                -model robot2"
	          respawn="false" output="screen" />
	

	    <node pkg="robot_state_publisher" type="state_publisher" name="robot_state_publisher2" output="screen" >
	        <param name="publish_frequency" type="double" value="50.0" />
	        <param name="tf_prefix" type="string" value="" />
	    </node>
	

	    <node pkg="laser_filters" type="scan_to_cloud_filter_chain" respawn="true" name="base_shadow_filter2" >
	        <remap from="scan" to="base_scan/scan" />
	        <remap from="cloud_filtered" to="base_scan/shadow_filtered" />
	        <param name="target_frame" value="base_footprint" />
	        <param name="high_fidelity" value="false" />
	        <rosparam command="load" file="$(find erratic_description)/params/shadow_filter.yaml" />
	    </node>
	

	    <node pkg="robot_self_filter" type="self_filter" name="base_laser_self_filter2" respawn="true" output="screen" >
	        <remap from="cloud_in" to="base_scan/shadow_filtered" />
	        <remap from="cloud_out" to="base_scan/marking" />
	        <param name="sensor_frame" type="string" value="base_scan_link" />
	        <rosparam file="$(find erratic_description)/params/self_filter.yaml" command="load" />
	    </node>
	</group>  -->
</launch>


<!--    <node pkg="fake_localization" type="fake_localization" name="fake_localization" respawn="true" output="screen" >-->
<!--        <param name="odom_frame_id" value="odom"/> -->
<!--    </node> -->

